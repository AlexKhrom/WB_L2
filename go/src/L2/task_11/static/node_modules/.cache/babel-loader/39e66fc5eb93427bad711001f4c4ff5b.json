{"remainingRequest":"/Users/mac/go/src/L2/task_11/static/node_modules/thread-loader/dist/cjs.js!/Users/mac/go/src/L2/task_11/static/node_modules/babel-loader/lib/index.js!/Users/mac/go/src/L2/task_11/static/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mac/go/src/L2/task_11/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/go/src/L2/task_11/static/src/components/tasks/ListTasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/go/src/L2/task_11/static/src/components/tasks/ListTasks.vue","mtime":1660935460445},{"path":"/Users/mac/go/src/L2/task_11/static/babel.config.js","mtime":1653650336335},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/thread-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/babel-loader/lib/index.js","mtime":1656160197672},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/vue-loader/lib/index.js","mtime":1656160198005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","Footer","data","taskHours","taskMinutes","taskNum","isAddNum","isTaskInfo","chosenTaskId","taskPieces","methods","getTasks","console","response","tasks","localStorage","openChangeTask","taskId","getTaskPieces","id","tasksPieces","changeTask","index","task","num","deltaNum","newTask","title","timeStart","timeEnd","type","target","deleteTask","clearInterval","camebackTask","timeLeft","date","calcProgress","calcPercent","makeMinutesAndHoursStr","hours","minutes","findIndexTasks","beforeMount"],"sourceRoot":"src/components/tasks","sources":["ListTasks.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"(task) in this.$store.state.tasks\"\n         :key=\"task.id\"\n    >\n      <div @click=\"isTaskInfo=true\"\n           style=\"display: flex;justify-content: space-between;margin-top: 20px;padding:5px;\">\n        <div>\n          <div :style=\"task.deleted?'opacity: 0.5':''\"\n               style=\"font-size: 18px;text-transform: capitalize;display: flex;align-items: center;\">{{ task.title }}\n          </div>\n          <span :style=\"task.deleted?'opacity: 0.5':''\"\n                style=\"color: #555;font-size: 15px;display: block;padding-top: 10px\">{{\n              timeLeft(new Date(task.timeEnd * 1000))\n            }}\n          </span>\n\n        </div>\n        <div @click.stop>\n          <span v-if=\"task.deleted\" style=\"color: #555;font-size: 12px;padding-right: 10px\">{{\n              task.waitSeconds\n            }}с</span>\n          <!--          <v-btn v-if=\"!event.deleted\" @click=\"changeEvent(event.id)\" icon>✏️</v-btn>-->\n          <v-btn v-if=\"!task.deleted\" @click=\"openChangeTask(task.id)\" icon>✏️</v-btn>\n          <v-btn v-if=\"task.deleted\" @click=\"camebackTask(task.id)\" text small>вернуть ↩︎</v-btn>\n          <v-btn v-else @click=\"deleteTask(task.id)\" icon>🗑</v-btn>\n          <span v-if=\"!task.deleted\"\n                style=\"color: #555;font-size: 13px;display: block;text-align: right;padding-right: 5px\">\n              {{ calcProgress(task.id) }}\n\n          </span>\n        </div>\n      </div>\n      <div :style=\"{border: '2px solid green',opacity:'0.3'}\"\n      ></div>\n      <div\n          :style=\"{position:'relative',top:'-4px',border: '2px solid green',width:''+calcPercent(task)+'%',display:calcPercent(task)===0?'none':''}\"\n      ></div>\n    </div>\n\n    <template v-if=\"isAddNum\">\n      <div class=\"picker\" @click=\"isAddNum=false\">\n        <div class=\"picker__content\" @click.stop>\n          <slot>\n            <div style=\"background-color: white;padding: 20px;border-radius: 3px; width: 320px\">\n              <v-container grid-list-md text-xs-center>\n                <v-layout row wrap>\n                  <v-row>\n                    <div style=\"display: flex;justify-content: space-between;padding:5px;color: #777777;width: 100%\">\n                      <div>\n                        <div class=\"text-h5\" style=\"max-width: 200px;word-wrap: break-word;\">\n                          {{ $store.state.tasks[findIndexTasks(chosenTaskId)].title }}\n                        </div>\n\n                      </div>\n                      <div style=\"white-space: nowrap;\">\n                        {{ calcProgress(chosenTaskId) }}\n                      </div>\n                    </div>\n                    <template v-if=\"$store.state.tasks[findIndexTasks(chosenTaskId)].type==='time'\">\n                      <v-flex xs6>\n                        <v-text-field\n                            label=\"hours\"\n                            outlined\n                            v-model=\"taskHours\"\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex xs6>\n                        <v-text-field\n                            label=\"minutes\"\n                            outlined\n                            v-model=\"taskMinutes\"\n                        ></v-text-field>\n                      </v-flex>\n                    </template>\n                    <template v-else>\n                      <v-flex xs12>\n                        <v-text-field\n                            :label=\"$store.state.tasks[findIndexTasks(chosenTaskId)].type\"\n                            outlined\n                            v-model=\"taskNum\"\n                        ></v-text-field>\n                      </v-flex>\n                    </template>\n                    <v-btn class=\"mb-2\" width=\"290px\"\n                           @click=\"changeTask\"\n                           height=\"50px\"\n                           color=\"white\">add\n                    </v-btn>\n                  </v-row>\n                </v-layout>\n              </v-container>\n            </div>\n          </slot>\n        </div>\n      </div>\n    </template>\n\n\n    <template v-if=\"isTaskInfo\">\n      <div class=\"picker\" @click=\"isTaskInfo=false\">\n        <div class=\"picker__content\" @click.stop>\n          <slot>\n            <h1>Hello World</h1>\n          </slot>\n        </div>\n      </div>\n    </template>\n\n\n    <Footer>\n\n    </Footer>\n  </div>\n</template>\n\n<script>\nimport Footer from \"@/components/Footer\";\nimport moment from \"moment\";\n\nexport default {\n  name: \"ListTasks\",\n  components: {Footer},\n  data() {\n    return {\n      taskHours: 0,\n      taskMinutes: 0,\n      taskNum: 0,\n      isAddNum: false,\n      isTaskInfo: false,\n      chosenTaskId: -1,\n      taskPieces: [],\n    }\n  },\n  methods: {\n    async getTasks() {\n      console.log('hi there too')\n      let response = await this.$store.state.makeReq('api/getTasks', 'GET')\n\n      let tasks = await response.json()\n      console.log('tasls = ', tasks)\n      if (tasks === null) {\n        tasks = []\n      }\n\n      this.$store.state.tasks = tasks\n      console.log('resp = ', this.$store.state.tasks)\n      localStorage.setItem('tasks', JSON.stringify(this.$store.state.tasks))\n      console.log(this.$store.state.tasks)\n    },\n\n    openChangeTask(taskId) {\n      this.isAddNum = true\n      this.chosenTaskId = taskId\n      this.getTaskPieces()\n      console.log('hi')\n    },\n    async getTaskPieces(){\n      let response = await this.$store.state.makeReq(\"api/getTaskPieces\", \"POST\", JSON.stringify({id:this.chosenTaskId}))\n      let tasksPieces = await response.json()\n      console.log('tasls = ', tasksPieces)\n      if (tasksPieces === null) {\n        tasksPieces = []\n      }\n\n      this.taskPieces = tasksPieces\n      console.log(\"pieces = \", tasksPieces)\n\n    },\n    async changeTask() {\n      let index = this.findIndexTasks(this.chosenTaskId)\n      let task = this.$store.state.tasks[index]\n      let num = 0\n      let deltaNum = 0\n      console.log({task})\n      if (parseInt(this.taskNum) > 0 || parseInt(this.taskHours) >= 0 && parseInt(this.taskMinutes) >= 0) {\n        if (task.type === 'time') {\n          console.log(\"hi there\")\n          console.log('calc = ', parseInt(this.$store.state.tasks[index].num) + parseInt((parseInt(this.taskHours) * 60 + parseInt(this.taskMinutes)) * 60))\n          num = parseInt(this.$store.state.tasks[index].num) + parseInt((parseInt(this.taskHours) * 60 + parseInt(this.taskMinutes)) * 60)\n          deltaNum = parseInt((parseInt(this.taskHours) * 60 + parseInt(this.taskMinutes)) * 60)\n        } else {\n          num = parseInt(this.$store.state.tasks[index].num) + parseInt(this.taskNum)\n          deltaNum = parseInt(this.taskNum)\n        }\n        this.$store.state.tasks[index].num = num\n      }\n      localStorage.setItem('tasks', JSON.stringify(this.$store.state.tasks))\n      console.log(task)\n      let newTask = {\n        id: task.id,\n        title: task.title,\n        timeStart: task.timeStart,\n        timeEnd: task.timeEnd,\n        type: task.type,\n        target: task.target,\n        num: num,\n        deltaNum: deltaNum,\n      }\n      let response = await this.$store.state.makeReq('api/changeTask', 'PUT', JSON.stringify(newTask))\n      console.log(response)\n      this.isAddNum = false\n      this.taskHours = 0\n      this.taskMinutes = 0\n      this.taskNum = 0\n    },\n    deleteTask(id) {\n      let index = this.findIndexTasks(id)\n      let task = this.$store.state.tasks[index]\n\n      // console.log(\"index = \", index)\n      // console.log({event})\n\n      let waitSeconds = 3\n      task.waitSeconds = waitSeconds\n      let intervalId = setInterval(() => {\n        if (!task.deleted) {\n          clearInterval(intervalId)\n          localStorage.setItem('tasks', JSON.stringify(this.$store.state.tasks))\n          this.$forceUpdate()\n          return\n        }\n        if (--waitSeconds < 0) {\n          clearInterval(intervalId);\n          let index = this.findIndexTasks(id)\n          this.$store.state.makeReq(\"api/deleteTask\", \"DELETE\", JSON.stringify({id: id}))\n          this.$store.state.tasks.splice(index, 1)\n        } else {\n          task.waitSeconds = waitSeconds\n        }\n        this.$forceUpdate()\n      }, 1000);\n\n      // this.$store.state.events.splice(index, 1)\n\n      task.deleted = Date.now();\n      this.$forceUpdate();\n      localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n    },\n    camebackTask(id) {\n      let index = this.findIndexTasks(id)\n      this.$store.state.tasks[index].deleted = 0\n      this.$forceUpdate();\n    },\n    timeLeft(date) {\n      // console.log(date)\n      // let arr = moment(date).fromNow().split(' ')\n      // console.log(arr)\n      // arr.splice(0,1)\n      // console.log(arr)\n      // return \"осталось \"+arr.join(\" \")\n      return moment(date).fromNow()\n    },\n    calcProgress(taskId) {\n      let task = this.$store.state.tasks[this.findIndexTasks(taskId)]\n      if (task.type === 'time') {\n        return this.makeMinutesAndHoursStr(parseInt(parseInt(task.num) / 3600), parseInt(task.num) % 3600 / 60) + \" / \" + this.makeMinutesAndHoursStr(parseInt(parseInt(task.target) / 3600), parseInt(task.target) % 3600 / 60)\n      } else {\n        return task.num + ' / ' + task.target\n      }\n    },\n    calcPercent(task) {\n      let num = 0\n      if (task.num !== undefined) {\n        num = task.num\n      }\n      // console.log('percentege = ', num/task.target*100)\n      return num / task.target * 100 > 100 ? 100 : num / task.target * 100\n    },\n    makeMinutesAndHoursStr(hours, minutes) {\n      hours = hours.toString().length === 1 ? '0' + hours : hours\n      minutes = minutes.toString().length === 1 ? '0' + minutes : minutes\n      return hours + ':' + minutes\n    },\n    findIndexTasks(id) {\n      for (let i = 0; i < this.$store.state.tasks.length; i++) {\n        if (this.$store.state.tasks[i].id === id) {\n          return i\n        }\n      }\n      return -1\n    },\n  },\n  beforeMount() {\n    console.log('hi there')\n    this.getTasks()\n  }\n}\n</script>\n\n<style scoped>\n.picker {\n  color: white;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  z-index: 100;\n  overflow: auto;\n  display: flex;\n  padding-top: 80px;\n}\n\n.picker__content {\n  /*overflow-y: scroll;*/\n  display: block;\n  width: 290px;\n  margin: auto;\n\n\n  min-height: 100%;\n  justify-content: space-between;\n  z-index: 200;\n}\n</style>"]}]}