{"remainingRequest":"/Users/mac/go/src/L2/task_11/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/go/src/L2/task_11/static/src/App.vue?vue&type=style&index=0&id=2ae1f027&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/go/src/L2/task_11/static/src/App.vue","mtime":1662230388022},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/css-loader/dist/cjs.js","mtime":1656160197442},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656160198444},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/postcss-loader/src/index.js","mtime":1656160197665},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/L2/task_11/static/node_modules/vue-loader/lib/index.js","mtime":1656160198005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoNCi5waWNrZXIgew0KICBjb2xvcjogd2hpdGU7DQogIHRvcDogMDsNCiAgYm90dG9tOiAwOw0KICByaWdodDogMDsNCiAgbGVmdDogMDsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOw0KICBwb3NpdGlvbjogZml4ZWQ7DQogIHotaW5kZXg6IDEwMDsNCiAgb3ZlcmZsb3c6IGF1dG87DQogIGRpc3BsYXk6IGZsZXg7DQogIHBhZGRpbmctdG9wOiA4MHB4Ow0KfQ0KDQoucGlja2VyX19jb250ZW50IHsNCiAgLypvdmVyZmxvdy15OiBzY3JvbGw7Ki8NCiAgZGlzcGxheTogYmxvY2s7DQogIHdpZHRoOiAyOTBweDsNCiAgbWFyZ2luOiBhdXRvOw0KDQoNCiAgbWluLWhlaWdodDogMTAwJTsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICB6LWluZGV4OiAyMDA7DQp9DQoNCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <v-app style=\"padding: 20px;\">\r\n    <template v-if=\"isNewEvent\">\r\n      <div class=\"picker\" @click=\"isNewEvent=false\">\r\n        <div class=\"picker__content\" @click.stop>\r\n          <slot>\r\n            <v-date-picker\r\n                :min=\"(new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\"\r\n                v-model=\"picker\"\r\n                header-color=\"black primary\"\r\n            ></v-date-picker>\r\n\r\n            <v-text-field\r\n                v-model=\"eventTitle\"\r\n                style=\"margin-top: 30px\"\r\n                solo\r\n                label=\"title\"\r\n            ></v-text-field>\r\n            <v-btn\r\n                style=\"width: 100%\"\r\n                depressed\r\n                color=\"primary\"\r\n                @click=\"creatEvent\"\r\n            >\r\n              creat\r\n            </v-btn>\r\n\r\n          </slot>\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n\r\n    <div style=\"width: 270px;margin: auto;margin-top: 30px\">\r\n      <slot>\r\n        <v-btn\r\n            style=\"width: 100%\"\r\n            v-if=\"!isNewEvent\"\r\n            @click=\"isNewEvent=true\"\r\n            color=\"primary\"\r\n        >\r\n          new event\r\n        </v-btn>\r\n        <v-btn\r\n            style=\"width: 100%;margin-top: 30px\"\r\n            @click=\"getEventsDay()\"\r\n            color=\"primary\"\r\n        >\r\n          events for day\r\n        </v-btn>\r\n        <v-btn\r\n            style=\"width: 100%;margin-top: 30px\"\r\n            @click=\"getEventsWeek()\"\r\n            color=\"primary\"\r\n        >\r\n          events for week\r\n        </v-btn>\r\n        <v-btn\r\n            style=\"width: 100%;margin-top: 30px\"\r\n            @click=\"getEventsMonth()\"\r\n            color=\"primary\"\r\n        >\r\n          events for month\r\n        </v-btn>\r\n      </slot>\r\n    </div>\r\n\r\n    <div style=\"width: 350px;margin: auto;margin-top: 50px\">\r\n      <h1>{{duration}}</h1>\r\n      <!--      <div v-for=\"(event) in this.events\"-->\r\n      <!--           :key=\"event.id\">-->\r\n      <!--        <h1>{{event.title}}</h1><h2>{{(new Date(event.date - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)}}</h2>-->\r\n      <!--      </div>-->\r\n\r\n      <div v-for=\"(event) in this.events\"\r\n           :key=\"event.id\"\r\n      >\r\n        <!--        <div v-if=\"isNewDay(index)\" style=\"margin-top: 20px;color: #555555\">{{ new Date(event.dt) | moment }}</div>-->\r\n        <div\r\n            style=\"display: flex;justify-content: space-between;margin-top: 20px;padding:5px;\">\r\n          <div>\r\n            <div :style=\"event.deleted?'opacity: 0.5':''\"\r\n                 style=\"font-size: 18px;text-transform: capitalize;display: flex;align-items: center;\">{{ event.title }}\r\n            </div>\r\n            <!--            <span style=\"color: #555;font-size: 11px;display: block\">{{-->\r\n            <!--                (new Date(event.date - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)-->\r\n            <!--              }}</span>-->\r\n          </div>\r\n          <div>\r\n             <span style=\"color: #555;font-size: 18px;\">{{\r\n                 (new Date(event.date - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\r\n               }}</span>\r\n            <v-btn @click=\"changeEvent(event)\" icon>‚úèÔ∏è</v-btn>\r\n            <v-btn @click=\"deleteEvent(event)\" icon>üóë</v-btn>\r\n          </div>\r\n        </div>\r\n        <!--        <div :style=\"{border: '2px solid '+borderColorForEvent(index),width: calcTimePercent(index) +'%'}\"-->\r\n        <!--        ></div>-->\r\n      </div>\r\n    </div>\r\n\r\n    <template>\r\n      <v-row justify=\"center\">\r\n        <v-dialog\r\n            v-model=\"isDeleteEvent\"\r\n            persistent\r\n            max-width=\"290\"\r\n        >\r\n          <v-card>\r\n            <v-card-title class=\"text-h5\">\r\n              Delete {{ deleteEventObj.title }} ?\r\n            </v-card-title>\r\n            <!--            <v-card-text>Let Google help apps determine location. This means sending anonymous location data to Google,-->\r\n            <!--              even when no apps are running.-->\r\n            <!--            </v-card-text>-->\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-btn\r\n                  color=\"darken-1\"\r\n                  text\r\n                  @click=\"isDeleteEvent = false;\"\r\n              >\r\n                No\r\n              </v-btn>\r\n              <v-btn\r\n                  color=\"green darken-1\"\r\n                  text\r\n                  @click=\"deleteEventWithId()\"\r\n              >\r\n                Yes\r\n              </v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-dialog>\r\n      </v-row>\r\n    </template>\r\n\r\n    <template v-if=\"isChangeEvent\">\r\n      <div class=\"picker\" @click=\"isChangeEvent=false\">\r\n        <div class=\"picker__content\" @click.stop>\r\n          <slot>\r\n            <v-date-picker\r\n                v-model=\"changePicker\"\r\n                header-color=\"black primary\"\r\n            ></v-date-picker>\r\n\r\n            <v-text-field\r\n                v-model=\"changeEventObj.title\"\r\n                style=\"margin-top: 30px\"\r\n                solo\r\n                label=\"title\"\r\n            ></v-text-field>\r\n            <v-btn\r\n                style=\"width: 100%\"\r\n                depressed\r\n                color=\"primary\"\r\n                @click=\"saveChangeEvent()\"\r\n            >\r\n              save\r\n            </v-btn>\r\n\r\n          </slot>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: 'App',\r\n  metaInfo: {\r\n    title: 'tasks'\r\n  },\r\n  data() {\r\n    return {\r\n      duration: \"\",\r\n\r\n      picker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n      isNewEvent: false,\r\n      eventTitle: \"\",\r\n      newEvent: {\r\n        userId: 0,\r\n        title: \"\",\r\n        date: -1,\r\n      },\r\n      isChangeEvent: false,\r\n      changeEventId: -1,\r\n      changeEventObj: {},\r\n      changePicker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n\r\n      isDeleteEvent: false,\r\n      deleteEventId: -1,\r\n      deleteEventObj: {},\r\n\r\n      events: [],\r\n\r\n      lastCommand: function () {\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    async creatEvent() {\r\n      this.isNewEvent = !this.isNewEvent\r\n      this.newEvent.userId = 0\r\n      this.newEvent.title = this.eventTitle\r\n      this.newEvent.date = (new Date(this.picker)).getTime()\r\n\r\n      console.log(\"newTask = \", this.newEvent)\r\n      console.log(this.newEvent.date)\r\n      console.log(this.picker)\r\n\r\n      this.eventTitle = \"\"\r\n      this.picker = (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\r\n\r\n      this.makeReq(\"/api/createEvent\", \"POST\", JSON.stringify(this.newEvent))\r\n\r\n      this.newEvent = {\r\n        userId: 0,\r\n        title: \"\",\r\n        date: -1,\r\n      }\r\n      setTimeout(this.lastCommand, 100)\r\n    },\r\n\r\n    async getEventsDay() {\r\n      let response = await this.makeReq(\"/api/events_for_day?user_id=\"+this.newEvent.userId+\"&date=\" + (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10), \"GET\")\r\n      let respBody = await response.json()\r\n      console.log(\"resp body = \", respBody)\r\n\r\n      this.events = respBody\r\n      this.events.sort(this.compare)\r\n      this.lastCommand = this.getEventsDay\r\n      this.duration = \"Events for day\"\r\n    },\r\n\r\n    async getEventsWeek() {\r\n      let response = await this.makeReq(\"/api/events_for_week?user_id=\"+this.newEvent.userId+\"&date=\" + (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10), \"GET\")\r\n      let respBody = await response.json()\r\n      console.log(\"resp body = \", respBody)\r\n      this.events = respBody\r\n      this.events.sort(this.compare)\r\n      this.lastCommand = this.getEventsWeek\r\n      this.duration = \"Events for week\"\r\n    },\r\n    async getEventsMonth() {\r\n      let response = await this.makeReq(\"/api/events_for_month?user_id=\"+this.newEvent.userId+\"&date=\" + (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10), \"GET\")\r\n      let respBody = await response.json()\r\n      console.log(\"resp body = \", respBody)\r\n      this.events = respBody\r\n      this.events.sort(this.compare)\r\n      this.lastCommand = this.getEventsMonth\r\n      this.duration = \"Events for month\"\r\n    },\r\n\r\n    changeEvent(event) {\r\n      this.changeEventObj = event\r\n      this.isChangeEvent = true\r\n      this.changePicker = (new Date(event.date - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\r\n    },\r\n\r\n    async saveChangeEvent() {\r\n      this.changeEventObj.date = (new Date(this.changePicker)).getTime()\r\n      this.makeReq(\"/api/updateEvent\", \"UPDATE\", JSON.stringify(this.changeEventObj))\r\n      this.isChangeEvent = false\r\n      setTimeout(this.lastCommand, 100)\r\n      this.changeEventObj = {}\r\n\r\n    },\r\n\r\n    deleteEvent(event) {\r\n      this.deleteEventObj = event\r\n      this.isDeleteEvent = true\r\n      this.lastCommand()\r\n    },\r\n\r\n    async deleteEventWithId() {\r\n      this.makeReq(\"/api/deleteEvent\", \"DELETE\", JSON.stringify(this.deleteEventObj))\r\n      setTimeout(this.lastCommand, 100)\r\n      this.deleteEventObj = {}\r\n      this.isDeleteEvent = false;\r\n    },\r\n\r\n    async makeReq(url, method, body) {\r\n      let response\r\n      if (body === undefined) {\r\n        response = await fetch(url, {\r\n          method: method,\r\n        });\r\n      } else {\r\n        response = await fetch(url, {\r\n          method: method,\r\n          body: body\r\n        });\r\n      }\r\n\r\n      if (response.ok) { // –µ—Å–ª–∏ HTTP-—Å—Ç–∞—Ç—É—Å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 200-299\r\n        // –ø–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (—Å–º. –ø—Ä–æ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–∏–∂–µ)\r\n        console.log(\"okkkk\")\r\n        return response\r\n      } else if (response.status > 299 && response.status < 500) {\r\n        console.log(\"err\")\r\n        return 'err'\r\n      } else if (response.status > 500) {\r\n        console.log(\"some wrong on backend\")\r\n        return 'backend err'\r\n      }\r\n    },\r\n    compare(a, b) {\r\n      if (a.date < b.date) {\r\n        return -1;\r\n      }\r\n      if (a.date > b.date) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  },\r\n  beforeMount() {\r\n    this.getEventsDay()\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.picker {\r\n  color: white;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  z-index: 100;\r\n  overflow: auto;\r\n  display: flex;\r\n  padding-top: 80px;\r\n}\r\n\r\n.picker__content {\r\n  /*overflow-y: scroll;*/\r\n  display: block;\r\n  width: 290px;\r\n  margin: auto;\r\n\r\n\r\n  min-height: 100%;\r\n  justify-content: space-between;\r\n  z-index: 200;\r\n}\r\n\r\n</style>\r\n"]}]}